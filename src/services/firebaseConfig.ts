import { initializeApp, getApps, getApp } from 'firebase/app';
import { initializeAuth, getReactNativePersistence, signInWithCustomToken, getAuth } from 'firebase/auth';
import { getFirestore } from 'firebase/firestore';
import { Platform } from 'react-native';

// Firebase configuration for React Native (Android/iOS)
// Values loaded from environment variables (.env file)
const firebaseConfig = {
  apiKey: process.env.EXPO_PUBLIC_FIREBASE_API_KEY,
  authDomain: process.env.EXPO_PUBLIC_FIREBASE_AUTH_DOMAIN,
  projectId: process.env.EXPO_PUBLIC_FIREBASE_PROJECT_ID,
  storageBucket: process.env.EXPO_PUBLIC_FIREBASE_STORAGE_BUCKET,
  messagingSenderId: process.env.EXPO_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,
  appId: process.env.EXPO_PUBLIC_FIREBASE_APP_ID,
  // Disable automatic analytics collection
  automaticDataCollectionEnabled: false,
};

// Initialize Firebase with analytics disabled (only if not already initialized)
const app = getApps().length === 0 ? initializeApp(firebaseConfig) : getApp();

// Initialize Auth with platform-specific persistence
let auth;
try {
  if (Platform.OS === 'web') {
    // Use default web auth for web platform
    auth = getAuth(app);
  } else {
    // Use React Native persistence for mobile platforms
    const AsyncStorage = require('@react-native-async-storage/async-storage').default;
    auth = initializeAuth(app, {
      persistence: getReactNativePersistence(AsyncStorage)
    });
  }
} catch (error: any) {
  // If auth is already initialized, get the existing instance
  if (error.code === 'auth/already-initialized') {
    auth = getAuth(app);
  } else {
    throw error;
  }
}

const db = getFirestore(app);

/**
 * Authenticates the user with Firebase using a custom token from your backend.
 * @param {string} token - The custom token generated by your backend.
 */
const signInWithCustomFirebaseToken = async (token: string) => {
  try {
    const userCredential = await signInWithCustomToken(auth, token);
    console.log('Successfully signed into Firebase:', userCredential.user.uid);
    return userCredential;
  } catch (error) {
    console.error('Firebase custom sign-in error:', error);
    throw error;
  }
};

export { app, auth, db, signInWithCustomFirebaseToken };